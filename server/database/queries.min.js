const db=require("./model");async function CheckOne_One({userid:userid,id:id},callback){try{const checkPrivateChat=db.prepare("SELECT \n       OO.id,\n       (SELECT U.username FROM users U WHERE U.id = OO.sender_id) AS sender,\n       (SELECT U.username FROM users U WHERE U.id = OO.receiver_id) AS receiver\n      FROM one_one OO\n      WHERE (OO.receiver_id = ? OR OO.sender_id = ?) AND OO.id = ?");callback(checkPrivateChat.get(userid,userid,id))}catch(err){console.error("Check Private chat error:",err),callback(null)}}const insertImageData=db.transaction((async({userid:userid,item:item,thumbnail:thumbnail,key:key})=>{try{const insertMedia=await db.prepare("INSERT INTO medias (user_id, name, type, path, thumbnail)\n      VALUES (?, ?, ?, ?, ?)\n      RETURNING id AS 'key', name, type, path AS 'url', thumbnail").get(userid,item.name,item.type,item.url,thumbnail),insertUsedMedia=await db.prepare("INSERT INTO mediaused (modules_id, media_id, assigned_id)\n    VALUES (2, ?, ?) RETURNING id").get(insertMedia.key,key);return insertUsedMedia?{key:insertUsedMedia.id,id:insertMedia.key,name:insertMedia.name,type:insertMedia.type,url:insertMedia.url,thumbnail:insertMedia.thumbnail,userid:userid}:null}catch(err){return console.error("Fail to attach media:",err),null}}));module.exports={CheckOne_One:CheckOne_One,insertImageData:insertImageData};