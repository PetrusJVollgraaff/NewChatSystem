const db=require("../database/model"),{CheckOne_One:CheckOne_One,insertImageData:insertImageData}=require("../database/queries"),{thumbnailImage:thumbnailImage}=require("./thumbconvertor"),clientArry={};function appendClient(data){clientArry[data.id]||(clientArry[data.id]={username:data.username})}function removeClient(data){clientArry[data.id]&&delete clientArry[data.id]}function roomChat(io){io.on("connection",(socket=>{appendClient(socket.handshake.auth),console.log(`User '${socket.handshake.auth.username}' connect to room`),socket.on("one_one",(async data=>{const userid=socket.handshake.auth.id,id=data.id;await CheckOne_One({userid:userid,id:id},(async chat=>{chat&&(clientArry[userid].rooms=`${chat.sender}+${chat.receiver}+${chat.id}`,socket.join(`${chat.sender}+${chat.receiver}+${chat.id}`))}))})),socket.on("one_send_message",(data=>{const userid=socket.handshake.auth.id,content=data.content,attchments=data.attachments||[],chatid=Number(data.id),roomname=clientArry[userid].rooms?clientArry[userid].rooms:null;chatid>0&&roomname&&CheckOne_One({userid:userid,id:chatid},(chat=>{if(chat&&roomname==`${chat.sender}+${chat.receiver}+${chat.id}`)try{const createdPrivateMsg=db.prepare("INSERT INTO messages (user_id, chat_id, content )\n                  VALUES (?, ?, ?) \n                  RETURNING id AS 'key', timestamp, content, user_id, chat_id,\n                   (SELECT U.username FROM users U WHERE U.id = ?) AS 'username'").all(userid,chatid,content,userid);if(createdPrivateMsg){const msg=createdPrivateMsg;msg[0].attachments=[],attchments.length>0?attchments.forEach((async(item,idx)=>{var thumbnail=null;item.type.includes("image")?thumbnail=await thumbnailImage(item.url):item.type.includes("video");const attachDetail=await insertImageData({userid:userid,item:item,thumbnail:thumbnail,key:msg[0].key});attachDetail&&msg[0].attachments.push(attachDetail),idx===attchments.length-1&&io.in(roomname).emit("one_receive_message",msg)})):io.in(roomname).emit("one_receive_message",msg)}}catch(err){return console.error("Private message send error",err),res.status(401).json({message:"Invalid message"})}}))})),socket.on("disconnect",(()=>{const auth=socket.handshake.auth,userid=auth.id;clientArry[userid].privateroom&&socket.leave(clientArry[userid].privateroom),removeClient(auth),console.log(`User '${auth.username}' disconnect from room`)}))}))}module.exports={roomChat:roomChat};